import streamlit as st
from streamlit_extras.let_it_rain import rain
from typing import Union
from PIL import Image
import time
from streamlit_player import st_player

import base64
@st.cache(allow_output_mutation=True)
def get_base64_of_bin_file(bin_file):
    with open(bin_file, 'rb') as f:
        data = f.read()
    return base64.b64encode(data).decode()

def set_png_as_page_bg(png_file):
    bin_str = get_base64_of_bin_file(png_file)
    page_bg_img = '''
    <style>
    .stApp {
     background-image: url("data:image/png;base64,%s");
     background-size: cover;
     }
     </style>
    ''' % bin_str

    st.markdown(page_bg_img, unsafe_allow_html=True)
    return


set_png_as_page_bg('PHONE.jpg')
rain(
    emoji="ü•≥",
    font_size=30,
    falling_speed=5,
    animation_length="infinite",
)

rain(
    emoji="üéÇ",
    font_size=30,
    falling_speed=5,
    animation_length="infinite",
)



def main(
    emoji: str,
    font_size: int = 30,
    falling_speed: int = 5,
    animation_length: Union[int, str] = "infinite",
):
    """
    Creates a CSS animation where input emoji falls from top to bottom of the screen.
    """

    if isinstance(animation_length, int):
        animation_length = f"{animation_length}"

    st.write(
        f"""
    <style>
    body {{
    background: gray;
    }}
    .emoji {{
    color: #777;
    font-size: {font_size}px;
    font-family: Arial;
    // text-shadow: 0 0 5px #000;
    }}
    ///*delete for no hover-effect*/
    //.emoji:hover {{
    //  font-size: 60px;
    //  text-shadow: 5px 5px 5px white;
    //}}
    @-webkit-keyframes emojis-fall {{
    0% {{
        top: -10%;
    }}
    100% {{
        top: 100%;
    }}
    }}
    @-webkit-keyframes emojis-shake {{
    0% {{
        -webkit-transform: translateX(0px);
        transform: translateX(0px);
    }}
    50% {{
        -webkit-transform: translateX(20px);
        transform: translateX(20px);
    }}
    100% {{
        -webkit-transform: translateX(0px);
        transform: translateX(0px);
    }}
    }}
    @keyframes emojis-fall {{
    0% {{
        top: -10%;
    }}
    100% {{
        top: 100%;
    }}
    }}
    @keyframes emojis-shake {{
    0% {{
        transform: translateX(0px);
    }}
    25% {{
        transform: translateX(15px);
    }}
    50% {{
        transform: translateX(-15px);
    }}
    100% {{
        transform: translateX(0px);
    }}
    }}
    .emoji {{
    position: fixed;
    top: -10%;
    z-index: 99999;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    cursor: default;
    -webkit-animation-name: emojis-fall, emojis-shake;
    -webkit-animation-duration: 5s, 3s;
    -webkit-animation-timing-function: linear, ease-in-out;
    -webkit-animation-iteration-count: {animation_length}, {animation_length}; // overall length
    -webkit-animation-play-state: running, running;
    animation-name: emojis-fall, emojis-shake;
    animation-duration: {falling_speed}s, 3s;  // fall speed
    animation-timing-function: linear, ease-in-out;
    animation-iteration-count: {animation_length}, {animation_length}; // overall length
    animation-play-state: running, running;
    }}
    .emoji:nth-of-type(0) {{
    left: 1%;
    -webkit-animation-delay: 0s, 0s;
    animation-delay: 0s, 0s;
    }}
    .emoji:nth-of-type(1) {{
    left: 10%;
    -webkit-animation-delay: 1s, 1s;
    animation-delay: 1s, 1s;
    }}
    .emoji:nth-of-type(2) {{
    left: 20%;
    -webkit-animation-delay: 6s, 0.5s;
    animation-delay: 6s, 0.5s;
    }}
    .emoji:nth-of-type(3) {{
    left: 30%;
    -webkit-animation-delay: 4s, 2s;
    animation-delay: 4s, 2s;
    }}
    .emoji:nth-of-type(4) {{
    left: 40%;
    -webkit-animation-delay: 2s, 2s;
    animation-delay: 2s, 2s;
    }}
    .emoji:nth-of-type(5) {{
    left: 50%;
    -webkit-animation-delay: 8s, 3s;
    animation-delay: 8s, 3s;
    }}
    .emoji:nth-of-type(6) {{
    left: 60%;
    -webkit-animation-delay: 6s, 2s;
    animation-delay: 6s, 2s;
    }}
    .emoji:nth-of-type(7) {{
    left: 70%;
    -webkit-animation-delay: 2.5s, 1s;
    animation-delay: 2.5s, 1s;
    }}
    .emoji:nth-of-type(8) {{
    left: 80%;
    -webkit-animation-delay: 1s, 0s;
    animation-delay: 1s, 0s;
    }}
    .emoji:nth-of-type(9) {{
    left: 90%;
    -webkit-animation-delay: 3s, 1.5s;
    animation-delay: 3s, 1.5s;
    }}
    </style>
    """,
        unsafe_allow_html=True,
    )

    st.write(
        f"""
    <!--get emojis from https://getemoji.com-->
    <div class="emojis">
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
        <div class="emoji">
            {emoji}
        </div>
    </div>
    """,
        unsafe_allow_html=True,
    )


    #def example():
        #rain(
            #emoji="üéÇ",
            #font_size=30,
            #falling_speed=5,
            #animation_length="infinite",
        #)
    
    
    
    
    
    
    st.sidebar.title('–ö–∏—Ä–∏–ª–ª, —Å –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è!')
    photo = st.sidebar.selectbox('–¢–µ–±—è –ø–æ–∑–¥—Ä–∞–≤–ª—è—é—Ç:',  ['–¢—É—Ç –≤—Å–µ', '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', '–ï–≥–æ—Ä', '–ê–Ω–≥–µ–ª–∏–Ω–∞', '–õ—ë—à–∞', '–ù–∞—Ç–∞—à–∞', '–ß—É–±–∞–∫–∫–∞'])
    if photo == '–¢—É—Ç –≤—Å–µ':
        st.sidebar.image('HB2.jpg')
    if photo == '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞':
        st.sidebar.image('7.png')
    if photo == '–ï–≥–æ—Ä':
        st.sidebar.image('5.png')
    if photo == '–ê–Ω–≥–µ–ª–∏–Ω–∞':
        st.sidebar.image('4.png')
    if photo == '–õ—ë—à–∞':
        st.sidebar.image('6.png')
    if photo == '–ù–∞—Ç–∞—à–∞':
        st.sidebar.image('8.png')
    if photo == '–ß—É–±–∞–∫–∫–∞':
        st.sidebar.image('9.png')
   
    
    st.markdown("<h1 style='text-align: center; '>–° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è, –Ω–µ –º–æ–ª–æ–∂–¥–µ–∂—å!</h1>", unsafe_allow_html = True)
    st.markdown("<h1 style='text-align: center; '>–í–æ–∑—Ä–∞—Å—Ç –ª–∏—à—å —É —Ç–µ–±—è –≤ –≥–æ–ª–æ–≤–µüòÅ</h1>", unsafe_allow_html = True)

    video_file = open('videodr.mp4', 'rb')
    video_bytes = video_file.read()

    st.video(video_bytes)
    
    

    
    if st.button("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É! –ï—Å–ª–∏ —Å–µ–º—å—è –¥–ª—è —Ç–µ–±—è —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ üë´", key=1):       
        st.balloons()
        st.info("–í —ç—Ç–æ—Ç –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –º—ã –∂–µ–ª–∞–µ–º —Ç–µ–±–µ, —á—Ç–æ–±—ã —Å–µ–º–µ–π–Ω–æ–µ —Å—á–∞—Å—Ç—å–µ –∏ —Ä–∞–¥–æ—Å—Ç—å —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–ª–∏ —Ç–µ–±—è –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–π –∂–∏–∑–Ω–∏. –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω –ª—é–±–æ–≤—å—é, —Å–º–µ—Ö–æ–º –∏ –ø—Ä–∏—è—Ç–Ω—ã–º–∏ –º–æ–º–µ–Ω—Ç–∞–º–∏ –≤ –∫—Ä—É–≥—É —Å–µ–º—å–∏. –ü—É—Å—Ç—å —Ç–≤–æ–∏ –º–µ—á—Ç—ã —Å–±—ã–≤–∞—é—Ç—Å—è, –∞ —É—Å–ø–µ—Ö –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—Ç —Ç–µ–±—è –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥—É.")
        st.image('Family.jpg', width=700)
        time.sleep(2.5)


    if st.button("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É! –ï—Å–ª–∏ –µ—Å—Ç—å, —Ä–∞–¥–∏ –∫–æ–≥–æ –≤—Å—Ç–∞–≤–∞—Ç—å —Ä–∞–Ω–æ —É—Ç—Ä–æ–º üç≥",  key=2):     
        st.balloons()
        st.info("–ñ–µ–ª–∞–µ–º, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –±—ã–ª —Ä—è–¥–æ–º —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∏—Ç—å –¥–ª—è —Ç–µ–±—è –≤–∫—É—Å–Ω—ã–µ –±–ª—é–¥–∞ –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ –≤–∏–¥–∏—Ç, –∫–∞–∫ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è. –ò –ø—É—Å—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –∏ —É —Ç–µ–±—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –≤–∫—É—Å–Ω–æ–µ –¥–ª—è —Ç–µ—Ö, –∫–æ–≥–æ —Ç—ã —Ü–µ–Ω–∏—à—å!")
        st.image('egg.png', width=700)
        time.sleep(2.5)


    if st.button("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É! –ï—Å–ª–∏ —É—Å–ø–µ—Ö - —Ç–≤–æ–µ –≤—Ç–æ—Ä–æ–µ –∏–º—è ü§ë",  key=3):     
        st.balloons()
        st.info("–ñ–µ–ª–∞–µ–º —Ç–µ–±–µ, —á—Ç–æ–±—ã –∫–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç —É —Ç–µ–±—è –±—ã–ª —Ç–∞–∫–æ–π —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω—ã–π, —á—Ç–æ —Ç–≤–æ–∏ –∫–æ–ª–ª–µ–≥–∏ –Ω–∞—á–Ω—É—Ç –ø–æ–¥–æ–∑—Ä–µ–≤–∞—Ç—å —Ç–µ–±—è –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞! –ù–µ –∑–∞–±—ã–≤–∞–π, —á—Ç–æ –¥–µ–Ω—å–≥–∏ –Ω–µ —Ä–∞—Å—Ç—É—Ç –Ω–∞ –¥–µ—Ä–µ–≤—å—è—Ö, –Ω–æ –æ–Ω–∏ —Ç–æ—á–Ω–æ –º–æ–≥—É—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –≤ –±–æ–ª—å—à–∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞—Ö –Ω–∞ —Ç–≤–æ–µ–º –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É!")
        st.image('money.jpg', width=700)
        time.sleep(2.5)


    if st.button("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É! –ï—Å–ª–∏ —á—Ç–æ —Ç–æ —É–∂–µ —Ö—Ä—É—Å—Ç–∏—Ç –≤ —Å–ø–∏–Ω–µ üò∑",  key=4):     
        st.balloons()
        st.info("–ñ–µ–ª–∞–µ–º –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ —Ç–µ–±–µ –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Å–∏–ª—å–Ω–æ–≥–æ, —á—Ç–æ –¥–∞–∂–µ –≤–∏—Ä—É—Å—ã –±—É–¥—É—Ç –Ω–∞—á–∏–Ω–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∞—Ç–∞–∫–æ–≤–∞—Ç—å! –ê –∑–¥–æ—Ä–æ–≤—å–µ –±—É–¥–µ—Ç —Ç–∞–∫–∏–º –ø—Ä–æ—á–Ω—ã–º, —á—Ç–æ –±–æ–ª–µ–∑–Ω—è–º –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å –º–µ–º—ã –æ —Å–≤–æ–∏—Ö –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö –∑–∞—Ä–∞–∑–∏—Ç—å —Ç–µ–±—è!")
        st.image('health.jpg', width=700)
        time.sleep(2.5)

    if st.button("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É! –ï—Å–ª–∏... –¥–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ üëç",  key=5):     
        st.balloons()
        st.image('1.jpg', width=700)
        st.image('2.jpg', width=700)
        st.image('3.jpeg', width=700)
        time.sleep(2.5)

if __name__ == '__main__':
    main(rain)
    
    #<i class="em em-rose" aria-role="presentation" aria-label="ROSE"></i>
